# coding=utf-8
# Copyright 2020 The HuggingFace Datasets Authors and the current dataset script contributor.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Dataset built from <auto-generated, manually corrected> caption pairs of
YouTube videos with labels capturing the differences between the two."""

from __future__ import absolute_import, division, print_function

import json

import datasets


_CITATION = """\
url={https://github.com/2dot71mily/youtube_captions_corrections}
},
year={2020}
}
"""

_DESCRIPTION = """\
Dataset built from pairs of YouTube captions where both an `auto-generated` and
a `manually corrected` caption was available for a single specified language.
This dataset looks only at simple (e.g. ignoring case/punctuation/stop words)
two-way (e.g. ignoring single-sided insertions) single-token differences between the
auto-gen and manual transcripts.
More complex differences in the original repo are not captured here.
"""

_LICENSE = "MIT License"

_CHANNEL_NAMES = [
    "3Blue1Brown",
    "Aurélien_Géron",
    "Jeremy_Howard",
    "Luis_Serrano",
    "TED",
    "Weights_&_Biases",
    "nature_video",
    "Alfredo_Canziani",
    "DeepMind",
    "Pieter_Abbeel",
    "Veritasium",
    "minutephysics",
    "stanfordonline",
]
_URLS = [
    f"https://raw.githubusercontent.com/2dot71mily/youtube_captions_corrections/main/data/transcripts/en/postproc_transcripts/{channel_name}.json"
    for channel_name in _CHANNEL_NAMES
]


class YoutubeCaptionCorrections(datasets.GeneratorBasedBuilder):
    """YouTube captions simple single token corrections."""

    def _info(self):
        return datasets.DatasetInfo(
            description=_DESCRIPTION,
            features=datasets.Features(
                {
                    "video_ids": datasets.Value("string"),
                    "default_seq": datasets.Sequence(datasets.Value("string")),
                    "correction_seq": datasets.Sequence(datasets.Value("string")),
                    "is_single_simple_diff": datasets.Sequence(
                        datasets.features.ClassLabel(
                            names=[
                                "FALSE",
                                "TRUE",
                            ]
                        )
                    ),
                }
            ),
            supervised_keys=("correction_seq", "is_single_simple_diff"),
            homepage="https://github.com/2dot71mily/youtube_captions_corrections",
            license=_LICENSE,
            citation=_CITATION,
        )

    def _split_generators(self, dl_manager):
        """Returns SplitGenerators."""
        downloaded_filepaths = dl_manager.download_and_extract(_URLS)
        return [
            datasets.SplitGenerator(
                name=datasets.Split.TRAIN,
                gen_kwargs={"filepaths": downloaded_filepaths},
            ),
        ]

    def _generate_examples(self, filepaths):
        """ Yields examples. """
        for fp in filepaths:
            with open(fp, "r", encoding="utf-8") as json_file:
                json_lists = list(json_file)

            for json_list_str in json_lists:
                json_list = json.loads(json_list_str)

                for ctr, result in enumerate(json_list):
                    response = {
                        "video_ids": result["video_ids"],
                        "is_single_simple_diff": result["is_single_simple_diff"],
                        "default_seq": result["default_seq"],
                        "correction_seq": result["correction_seq"],
                    }
                    yield ctr, response
